[func,nature]:rand([[2+cos(2*x),0],[2+sin(x),1],[2+sin(x)^2,1]]);
lower:0;
upper:%pi;

nlist:[2,4,8];
increments:makelist((upper-lower)/nlist[i],i,3);
nintervals:makelist(makelist([lower+increments[i]*(j-1),lower+increments[i]*j],j,nlist[i]),i,3);

nintervalsvalues:makelist(makelist(sort(at(func,x=nintervals[i][j]),ordermagnitudep),j,nlist[i]),i,3);
nuppervalues:makelist(makelist(nintervalsvalues[i][j][2],j,nlist[i]),i,3);
nlowervalues:makelist(makelist(nintervalsvalues[i][j][1],j,nlist[i]),i,3);

nunorderedintervalsvalues:makelist(makelist(at(func,x=nintervals[i][j]),j,nlist[i]),i,3);
ndecoy1:makelist(makelist(nunorderedintervalsvalues[i][j][2],j,nlist[i]),i,3);
ndecoy2:makelist(makelist(nunorderedintervalsvalues[i][j][1],j,nlist[i]),i,3);

ndecoy3:makelist(makelist((nunorderedintervalsvalues[i][j][1]+nunorderedintervalsvalues[i][j][2])/2,j,nlist[i]),i,3);

rectanglemanual(value,interval):=[[interval[1],0],[interval[2],0],[interval[2],value],[interval[1],value],[interval[1],0]];


niceplot(func,upper,lower,intervals):=
plot(append([func],
makelist([discrete,rectanglemanual(upper[i],intervals[i])],i,length(intervals)),
makelist([discrete,rectanglemanual(lower[i],intervals[i])],i,length(intervals))),
[x,-1,4],
[y,-1,4],
append([color,blue],makelist(gray,length(intervals)),makelist(black,length(intervals))),
append([style,[lines,2]],makelist([lines,2],length(intervals)),makelist([lines,2],length(intervals))),
[box,false],
[axes,solid],
[label,["x",6.8,0.5],["y",0.5,7]]);

addition(intervalenter,length):= block(value:0,for i in intervalenter do value:value+i*length,value);

upperbounds:makelist(float(addition(nuppervalues[i],increments[i])),i,length(increments));
lowerbounds:makelist(float(addition(nlowervalues[i],increments[i])),i,length(increments));

nsolgraphs:makelist([1,true,niceplot(func,nuppervalues[i],nlowervalues[i],nintervals[i])],i,length(increments));
nbadgraphs:makelist([[2,false,niceplot(func,ndecoy1[i],ndecoy2[i],nintervals[i])],
[3,false,niceplot(func,ndecoy2[i],ndecoy1[i],nintervals[i])],
[4,false,niceplot(func,nuppervalues[i],ndecoy3[i],nintervals[i])]
],i,length(increments));

nMCQsolutions:makelist(random_permutation(append([nsolgraphs[i]],nbadgraphs[i])),i,length(increments));

[tans1,tans4,tans7]:decimalplaces(upperbounds,2);
[tans2,tans5,tans8]:decimalplaces(lowerbounds,2);
