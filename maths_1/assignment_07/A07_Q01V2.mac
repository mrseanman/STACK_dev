func:rand([1/x,-log(x)+1,e^(-x)]);
lower:1;
upper:2;

nvalue:4;
increments:(upper-lower)/nvalue;
nintervals:makelist([lower+increments*(j-1),lower+increments*j],j,nvalue);

nintervalsvalues:makelist(at(func,x=nintervals[i]),i,nvalue);

nright:makelist(nintervalsvalues[i][2],i,nvalue);
nleft:makelist(nintervalsvalues[i][1],i,nvalue);

rectanglemanual(value,interval,base):=[[interval[1],base],[interval[2],base],[interval[2],value],[interval[1],value],[interval[1],base]];

niceplot(func,evalvalues,intervals,base):=
plot(append([func],
makelist([discrete,rectanglemanual(evalvalues[i],intervals[i],base)],i,length(intervals))),
[x,0,3],
[y,0,2],
append([color,blue],makelist(black,length(intervals))),
append([style,[lines,2]],makelist([lines,2],length(intervals))),
[box,false],
[axes,solid],
[label,["x",6.8,0.5],["y",0.5,7]]);

addition(intervalenter,length):= block(value:0,for i in intervalenter do value:value+i*length,value);

upperbounds:float(addition(nleft,increments));
lowerbounds:float(addition(nright,increments));
tans2:decimalplaces(lowerbounds,4);
tans5:decimalplaces(upperbounds,4);

testgraph:niceplot(func,nright,nintervals,0);
nsolgraphs:[[1,true,niceplot(func,nright,nintervals,0)],[1,true,niceplot(func,nleft,nintervals,0)]];
nbadgraphs:[[[2,false,niceplot(func,nright,nintervals,2)],
[3,false,niceplot(func,nleft,nintervals,0)],
[4,false,niceplot(func,nleft,nintervals,2)]],
[[2,false,niceplot(func,nright,nintervals,0)],
[3,false,niceplot(func,nright,nintervals,2)],
[4,false,niceplot(func,nleft,nintervals,2)]]];

nMCQsolutions:makelist(random_permutation(append([nsolgraphs[i]],nbadgraphs[i])),i,2);

nMCQsolutions2:random_permutation([[1,true,"upper"],[2,false,"lower"]]);
nMCQsolutions3:random_permutation([[1,true,"lower"],[2,false,"upper"]]);